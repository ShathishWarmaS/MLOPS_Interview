apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-web
  namespace: n8n-mlops
  labels:
    app: n8n-web
    component: web-server
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: n8n-web
  template:
    metadata:
      labels:
        app: n8n-web
        component: web-server
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5678"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: n8n-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: n8n-web
        image: n8n-mlops/web:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 5678
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Database Configuration
        - name: DB_TYPE
          value: "postgresdb"
        - name: DB_POSTGRESDB_HOST
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: host
        - name: DB_POSTGRESDB_PORT
          value: "5432"
        - name: DB_POSTGRESDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: DB_POSTGRESDB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        
        # Redis Configuration
        - name: QUEUE_BULL_REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: host
        - name: QUEUE_BULL_REDIS_PORT
          value: "6379"
        - name: QUEUE_BULL_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        
        # n8n Configuration
        - name: N8N_HOST
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: host
        - name: N8N_PORT
          value: "5678"
        - name: N8N_PROTOCOL
          value: "https"
        - name: WEBHOOK_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: webhook-url
        
        # Authentication
        - name: N8N_BASIC_AUTH_ACTIVE
          value: "false"
        - name: N8N_JWT_AUTH_ACTIVE
          value: "true"
        - name: N8N_JWT_AUTH_HEADER
          value: "authorization"
        - name: N8N_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: n8n-secret
              key: encryption-key
        
        # Execution Configuration
        - name: EXECUTIONS_PROCESS
          value: "main"
        - name: EXECUTIONS_MODE
          value: "queue"
        - name: EXECUTIONS_TIMEOUT
          value: "3600"
        - name: EXECUTIONS_MAX_TIMEOUT
          value: "7200"
        
        # Binary Data
        - name: N8N_DEFAULT_BINARY_DATA_MODE
          value: "filesystem"
        - name: N8N_BINARY_DATA_TTL
          value: "1440"
        
        # Logging
        - name: N8N_LOG_LEVEL
          value: "info"
        - name: N8N_LOG_OUTPUT
          value: "console"
        
        # Feature Flags
        - name: N8N_DISABLE_UI
          value: "false"
        - name: N8N_PERSONALIZATION_ENABLED
          value: "true"
        - name: N8N_VERSION_NOTIFICATIONS_ENABLED
          value: "false"
        
        # ML Configuration
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: mlflow-uri
        - name: PYTHON_PATH
          value: "/usr/bin/python3"
        
        # Kubernetes Configuration
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        volumeMounts:
        - name: n8n-data
          mountPath: /n8n/.n8n
        - name: n8n-files
          mountPath: /n8n/files
        - name: custom-nodes
          mountPath: /n8n/custom
          readOnly: true
        - name: workflow-templates
          mountPath: /n8n/templates
          readOnly: true
        - name: tmp
          mountPath: /tmp
      
      volumes:
      - name: n8n-data
        persistentVolumeClaim:
          claimName: n8n-data-pvc
      - name: n8n-files
        persistentVolumeClaim:
          claimName: n8n-files-pvc
      - name: custom-nodes
        configMap:
          name: custom-nodes-config
      - name: workflow-templates
        configMap:
          name: workflow-templates-config
      - name: tmp
        emptyDir: {}
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - n8n-web
              topologyKey: kubernetes.io/hostname
      
      nodeSelector:
        node-type: "compute"
      
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "compute"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: n8n-web-service
  namespace: n8n-mlops
  labels:
    app: n8n-web
    component: web-server
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 5678
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: n8n-web

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: n8n-web-hpa
  namespace: n8n-mlops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: n8n-web
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: n8n-web-pdb
  namespace: n8n-mlops
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: n8n-web